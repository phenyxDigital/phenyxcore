(function($, window, document, undefined) {
    window.addEventListener("dragover", function(e) {
        e = e || event;
        e.preventDefault();
    }, false);
    window.addEventListener("drop", function(e) {
        e = e || event;
        e.preventDefault();
    }, false);
    const compareMimeType = (mimeTypes, fileType, formatFile) => {
        if (mimeTypes.length < 2 && mimeTypes[0] === "*") {
            return true;
        }
        for (let index = 1; index < mimeTypes.length; index += 3) {
            if (mimeTypes[index + 1] === "*" && fileType.search(new RegExp(mimeTypes[index])) != -1) {
                return true;
            } else if (mimeTypes[index + 1] && mimeTypes[index + 1] != "*" && fileType.search(new RegExp("\\*" + mimeTypes[index + 1] + "\\*")) != -1) {
                return true;
            } else if (mimeTypes[index + 1] && mimeTypes[index + 1] != "*" && fileType.search(new RegExp(mimeTypes[index + 1])) != -1) {
                return true;
            } else if (mimeTypes[index + 1] === "" && (fileType.search(new RegExp(mimeTypes[index])) != -1 || formatFile.search(new RegExp(mimeTypes[index])) != -1)) {
                return true;
            }
        }
        return false;
    }
    $.fn.fontuplodify = function(opts) {
		
        const settings = $.extend({}, $.fn.fontuplodify.defaults, opts);
        this.each(function() {
            const self = this;
            if (!$(self).attr("multiple")) {
                return;
            }
            let accept = $(self).attr("accept") ? $(self).attr("accept").replace(/\s/g, "").split(",") : null;
            let result = [];
			var idButton = $(self).attr("data-target");
			
            accept.forEach((item) => {
                let regexp;
                if (item.search(/\//) != -1) {
                    regexp = new RegExp("([A-Za-z-.]*)\/([A-Za-z-*.]*)", "g");
                } else {
                    regexp = new RegExp("\.([A-Za-z-]*)()", "g");
                }
                const r = regexp.exec(item);
                result = result.concat(r);
            });
            
            let counter = 0;
            let dragbox = $(`<div class="fontuploadify"><div class="imageuploadify-overlay"></div><div class="imageuploadify-images-list"></div></div>`);
            let overlay = dragbox.find(".imageuploadify-overlay");
            let uploadIcon = dragbox.find(".imageuploadify-overlay i");
            let imagesList = dragbox.find(".imageuploadify-images-list");
            let addIcon = dragbox.find(".imageuploadify-images-list i");
            let addMsg = dragbox.find(".imageuploadify-images-list span");
            let button = $('#'+idButton);
			
            const retrieveFiles = (files) => {
						
				
				
				 for (let index = 0; index < files.length; ++index) {
					 
					let subType = '';
                    if (!accept || compareMimeType(result, files[index].type, /(?:\.([^.]+))?$/.exec(files[index].name)[1])) {
						
                        const id = Math.random().toString(36).substr(2, 9);
                        readingFile(id, files[index]);
                        totalFiles.push({
                            id: id,
                            file: files[index],
							index: idButton
                        });
                    }
        		};
                
            }
            const readingFile = (id, file) => {
                const fReader = new FileReader();
				let container;
				file.id = id;
				let type;
				if (file.type) {
                	
					container = $(`<tr data-id="`+id+`">
					<td align="left">
						<select name="variant_`+id+`" id="variant_`+id+`">
							<option value="regular" >Régulier</option>
							<option value="italic">Italic</option>
							<option value="100">Font Weight 100</option>
							<option value="100italic">Font Weight 100 Italic</option>
							<option value="200">Font Weight 200</option>
							<option value="200italic">Font Weight 200 Italic</option>
							<option value="300">Font Weight 300</option>
							<option value="300italic">Font Weight 300 Italic</option>
							<option value="400">Font Weight 400</option>
							<option value="400italic">Font Weight 400 Italic</option>
							<option value="500">Font Weight 500</option>
							<option value="500italic">Font Weight 500 Italic</option>
							<option value="600">Font Weight 600</option>
							<option value="600italic">Font Weight 600 Italic</option>
							<option value="700">Font Weight 700</option>
							<option value="700italic">Font Weight 700 Italic</option>
							<option value="800">Font Weight 800</option>
							<option value="800italic">Font Weight 800 Italic</option>
							<option value="900">Font Weight 900</option>
							<option value="900italic">Font Weight 900 Italic</option>
						</select>
					</td>
					<td align="left">
						<i class="fas fa-font"></i><span style="padding-left: 10px">${file.name}</span>
					</td>
					<td align="left">
						<span>${file.type}</span>
					</td>
					<td align="left">
						<input type="text" name="subset_`+id+`" id="subset_`+id+`" value="latin">
					</td>
					<td align="left">
						<select name="weight_`+id+`" id="weight_`+id+`">
							<option value="100">Font Weight 100</option>
							<option value="200">Font Weight 200</option>
							<option value="300">Font Weight 300</option>
							<option value="400" selected>Font Weight 400</option>
							<option value="500">Font Weight 500</option>
							<option value="600">Font Weight 600</option>
							<option value="700">Font Weight 700</option>
							<option value="800">Font Weight 800</option>
							<option value="900">Font Weight 900</option>
						</select>
					</td>
				</tr>`);
				} else {
					type = getFileExtension(file.name);
					file.type = type;
					container = $(`<tr data-id="`+id+`">
					<td align="left">
						<select name="variant_`+id+`" id="variant_`+id+`">
							<option value="regular" >Régulier</option>
							<option value="italic">Italic</option>
							<option value="100">Font Weight 100</option>
							<option value="100italic">Font Weight 100 Italic</option>
							<option value="200">Font Weight 200</option>
							<option value="200italic">Font Weight 200 Italic</option>
							<option value="300">Font Weight 300</option>
							<option value="300italic">Font Weight 300 Italic</option>
							<option value="400">Font Weight 400</option>
							<option value="400italic">Font Weight 400 Italic</option>
							<option value="500">Font Weight 500</option>
							<option value="500italic">Font Weight 500 Italic</option>
							<option value="600">Font Weight 600</option>
							<option value="600italic">Font Weight 600 Italic</option>
							<option value="700">Font Weight 700</option>
							<option value="700italic">Font Weight 700 Italic</option>
							<option value="800">Font Weight 800</option>
							<option value="800italic">Font Weight 800 Italic</option>
							<option value="900">Font Weight 900</option>
							<option value="900italic">Font Weight 900 Italic</option>
						</select>
					</td>
					<td align="left">
						<i class="fas fa-font"></i><span style="padding-left: 10px">${file.name}</span>
					</td>
					<td align="left">
						<span>`+type+`</span>
					</td>
					<td align="left">
						<input type="text" name="subset_`+id+`" id="subset_`+id+`" value="latin">
					</td>
					<td align="left">
						<select name="weight_`+id+`" id="weight_`+id+`">
							<option value="100">Font Weight 100</option>
							<option value="200">Font Weight 200</option>
							<option value="300">Font Weight 300</option>
							<option value="400" selected>Font Weight 400</option>
							<option value="500">Font Weight 500</option>
							<option value="600">Font Weight 600</option>
							<option value="700">Font Weight 700</option>
							<option value="800">Font Weight 800</option>
							<option value="900">Font Weight 900</option>
						</select>
					</td>
				</tr>`);
				}
			    let details = container.find(".imageuploadify-details");
				let deleteBtn = container.find("button");
                fReader.onloadend = function(e) {
					$('#addVariant').slideDown();
					$('#addVariant tbody').append(container);
					$('#variant_'+id).selectmenu({
						width:200,
						classes: {
                        	"ui-selectmenu-menu": "scrollable"
                   		},
					});
					$('#weight_'+id).selectmenu({
						width:200,
						classes: {
                        	"ui-selectmenu-menu": "scrollable"
                   		},
					});
					$('#webfontFiles').slideUp();
					$('#imageuploadify-container-font').slideUp();
					
                };
				deleteBtn.on("click", function() {
                    $(this.parentElement).remove();
                    for (let index = 0; totalFiles.length > index; ++index) {
                        if (totalFiles[index].id === id) {
                            totalFiles.splice(index, 1);
                            break;
                        }
                    }
                });
                fReader.readAsDataURL(file);
            };
			const getFileExtension = (fileName) => {
        		var  fileExtension;
        		fileExtension = fileName.replace(/^.*\./, '');
				if(fileExtension == 'eot') {
					return 'embedded-opentype';
				}
				if(fileExtension == 'woff2') {
					return 'application/x-font-woff';
				}
        		return fileExtension;
    		}
            const disableMouseEvents = () => {
                overlay.css("display", "flex");
                dragbox.css("border-color", "#3AA0FF");
                button.css("pointer-events", "none");
                addMsg.css("pointer-events", "none");
                addIcon.css("pointer-events", "none");
                imagesList.css("pointer-events", "none");
            }
            const enableMouseEvents = () => {
                overlay.css("display", "none");
                dragbox.css("border-color", "rgb(210, 210, 210)");
                button.css("pointer-events", "initial");
                addMsg.css("pointer-events", "initial");
                addIcon.css("pointer-events", "initial");
                imagesList.css("pointer-events", "initial");
            }
            button.mouseenter(function onMouseEnter(event) {
                button.css("background", "#1f1f1f").css("color", "white");
            }).mouseleave(function onMouseLeave() {
                button.css("background", "transparent").css("color", "#eeeeee");
            });
            button.on("click", function onClick(event) {
                event.stopPropagation();
                event.preventDefault();
                $(self).click();
            });
            dragbox.on("dragenter", function onDragenter(event) {
                event.stopPropagation();
                event.preventDefault();
                counter++;
                disableMouseEvents();
            });
            dragbox.on("dragleave", function onDragLeave(event) {
                event.stopPropagation();
                event.preventDefault();
                counter--;
                if (counter === 0) {
                    enableMouseEvents();
                }
            });
            dragbox.on("drop", function onDrop(event) {
                event.stopPropagation();
                event.preventDefault();
                enableMouseEvents();
                const files = event.originalEvent.dataTransfer.files;
                retrieveFiles(files);
            });
            $(window).bind("resize", function(e) {
                window.resizeEvt;
                $(window).resize(function() {
                    clearTimeout(window.resizeEvt);
                    window.resizeEvt = setTimeout(function() {
                        const width = dragbox.width();
                        const boxesNb = Math.floor(width / 100);
                        const marginSize = Math.floor((width - (boxesNb * 100)) / (boxesNb + 1));
                        let containers = imagesList.find(".imageuploadify-container");
                        for (let index = 0; index < containers.length; ++index) {
                            $(containers[index]).css("margin-right", "0px");
                            $(containers[index]).css("margin-left", marginSize + "px");
                        }
                        imagesList.find(".imageuploadify-container:nth-child(" + boxesNb + "n+4)").css("margin-left", marginSize + "px");
                        imagesList.find(".imageuploadify-container:nth-child(" + boxesNb + "n+3)").css("margin-right", marginSize + "px");
                    }, 500);
                });
            })
            $(self).on("change", function onChange() {
                const files = this.files;
                retrieveFiles(files);
            });
			$(document).on("click", "#resetImage"+idButton, function(){
				$('#resetImage'+idButton).remove();
				$('#'+idButton).attr("src", currentImage);
			});
			
            $(self).hide();
            dragbox.insertAfter(this);
        });
        return this;
    };
    $.fn.fontuplodify.defaults = {};
}(jQuery, window, document));